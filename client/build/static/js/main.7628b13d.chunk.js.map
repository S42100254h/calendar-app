{"version":3,"sources":["components/CalendarElement/index.jsx","services/calendar.js","components/CalendarBoard/index.jsx","App.js","index.js"],"names":["CalendarElement","day","format","date","className","Typography","align","variant","component","firstDay","dayjs","startOf","firstDayIndex","days","calendar","Array","fill","map","_","i","diffFromFirstDay","add","CalendarBoard","GridList","cols","spacing","cellHeight","d","key","color","c","toISOString","App","locale","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAyBeA,EApBS,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAInBC,EAD4B,IAAfD,EAAIE,OACK,iBAAS,IAErC,OACE,yBAAKC,UAAU,WACb,kBAACC,EAAA,EAAD,CACED,UAAU,OACVE,MAAM,SACNC,QAAQ,UACRC,UAAU,OAETP,EAAIC,OAAOA,M,wBChBdO,EAAWC,MAAQC,QAAQ,SAG3BC,EAAgBH,EAASR,MCAzBY,G,MAAO,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,WAEtCC,EDKFC,MAAM,IACDC,KAAK,GACLC,KAAI,SAACC,EAAGC,GAIL,IAAMC,EAAmBD,EAAIP,EAG7B,OAFYH,EAASY,IAAID,EAAkB,UCmBxCE,EA7BO,WACpB,OACE,yBAAKlB,UAAU,aACb,kBAACmB,EAAA,EAAD,CAAUnB,UAAU,OAAOoB,KAAM,EAAGC,QAAS,EAAGC,WAAW,QACxDb,EAAKI,KAAI,SAAAU,GAAC,OACT,wBAAIC,IAAKD,GACP,kBAACtB,EAAA,EAAD,CACED,UAAU,OACVyB,MAAM,gBACNvB,MAAM,SACNC,QAAQ,UACRC,UAAU,OAETmB,OAMNb,EAASG,KAAI,SAAAa,GAAC,OACb,wBAAIF,IAAKE,EAAEC,eACT,kBAAC,EAAD,CAAiB9B,IAAK6B,WCtBnBE,EANH,kBACR,6BACE,kBAAC,EAAD,Q,MCCNtB,IAAMuB,OAAO,MAEbC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7628b13d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\n\n// eslint-disable-next-line react/prop-types\nconst CalendarElement = ({ day }) => {\n\n  // 月の最初にだけ月情報をつける\n  const isFirstDay = day.date() === 1;\n  const format = isFirstDay ? \"M月D日\" : \"D\";\n\n  return (\n    <div className=\"element\">\n      <Typography\n        className=\"date\"\n        align=\"center\"\n        variant=\"caption\"\n        component=\"div\"\n      >\n        {day.format(format)}\n      </Typography>\n    </div>\n  );\n};\n\nexport default CalendarElement;","import dayjs from \"dayjs\";\n\n// 今月の最初の日を追加\nconst firstDay = dayjs().startOf(\"month\");\n\n// 最初の日の曜日を取得\nconst firstDayIndex = firstDay.day();\n\nexport const createCalendar = () =>\n\n// fill(0)で初期化する\n// 1~35の連番の配列を得るため、map関数でインデックス番号を取得する\n// 月の最初の日の値が0になるように配列の要素をシフトさせる\n    Array(35)\n        .fill(0)\n        .map((_, i) => {\n\n            // 月の最初の日からの差分を取得\n            // index値を日付として表示\n            const diffFromFirstDay = i - firstDayIndex;\n            const day = firstDay.add(diffFromFirstDay, \"day\");\n\n            return day;\n        });\n","import React from \"react\";\nimport CalendarElement from \"../CalendarElement\";\nimport { GridList, Typography } from \"@material-ui/core\";\nimport { createCalendar } from \"../../services/calendar\";\nimport \"./style.css\";\n\nconst days = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"];\n\nconst calendar = createCalendar();\n\nconst CalendarBoard = () => {\n  return (\n    <div className=\"container\">\n      <GridList className=\"grid\" cols={7} spacing={0} cellHeight=\"auto\">\n        {days.map(d => (\n          <li key={d}>\n            <Typography\n              className=\"days\"\n              color=\"textSecondary\"\n              align=\"center\"\n              variant=\"caption\"\n              component=\"div\"\n            >\n              {d}\n            </Typography>\n          </li>\n            \n            \n        ))}\n        {calendar.map(c => (\n          <li key={c.toISOString()}>\n            <CalendarElement day={c} />\n          </li>\n        ))}\n      </GridList>\n    </div>\n  );\n};\n\nexport default CalendarBoard;","import React from \"react\";\nimport CalendarBoard from \"./components/CalendarBoard\";\n\nconst App = () => (\n    <div>\n      <CalendarBoard />\n    </div>\n  );\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/ja\";\ndayjs.locale(\"ja\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}