{"ast":null,"code":"import dayjs from \"dayjs\"; // 今月の最初の日を追加\n\nconst firstDay = dayjs().startOf(\"month\"); // 最初の日の曜日を取得\n\nconst firstDayIndex = firstDay.day();\nexport const createCalendar = () => // fill(0)で初期化する\n// 1~35の連番の配列を得るため、map関数でインデックス番号を取得する\n// 月の最初の日の値が0になるように配列の要素をシフトさせる\nArray(35).fill(0).map((_, i) => {\n  // 月の最初の日からの差分を取得\n  // index値を日付として表示\n  const diffFromFirstDay = i - firstDayIndex;\n  const day = firstDay.add(diffFromFirstDay, \"day\");\n  return day;\n});\nexport const isSameday = (d1, d2) => {\n  const format = \"YYYYMMDD\";\n  return d1.format(format) === d2.format(format);\n};\nexport const isSameMonth = (m1, m2) => {\n  const format = \"YYYYMM\";\n  return m1.forat(format) === m2.format(format);\n};\nexport const isFirstDay = day => day.date() === 1;","map":{"version":3,"sources":["/Users/s42100254h/git/calendar-app/src/services/calendar.js"],"names":["dayjs","firstDay","startOf","firstDayIndex","day","createCalendar","Array","fill","map","_","i","diffFromFirstDay","add","isSameday","d1","d2","format","isSameMonth","m1","m2","forat","isFirstDay","date"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,QAAQ,GAAGD,KAAK,GAAGE,OAAR,CAAgB,OAAhB,CAAjB,C,CAEA;;AACA,MAAMC,aAAa,GAAGF,QAAQ,CAACG,GAAT,EAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAE9B;AACA;AACA;AACEC,KAAK,CAAC,EAAD,CAAL,CACGC,IADH,CACQ,CADR,EAEGC,GAFH,CAEO,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAEb;AACA;AACA,QAAMC,gBAAgB,GAAGD,CAAC,GAAGP,aAA7B;AACA,QAAMC,GAAG,GAAGH,QAAQ,CAACW,GAAT,CAAaD,gBAAb,EAA+B,KAA/B,CAAZ;AAEA,SAAOP,GAAP;AACD,CAVH,CALK;AAiBP,OAAO,MAAMS,SAAS,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACnC,QAAMC,MAAM,GAAG,UAAf;AACA,SAAOF,EAAE,CAACE,MAAH,CAAUA,MAAV,MAAsBD,EAAE,CAACC,MAAH,CAAUA,MAAV,CAA7B;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACrC,QAAMH,MAAM,GAAG,QAAf;AACA,SAAOE,EAAE,CAACE,KAAH,CAASJ,MAAT,MAAqBG,EAAE,CAACH,MAAH,CAAUA,MAAV,CAA5B;AACD,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAGjB,GAAG,IAAIA,GAAG,CAACkB,IAAJ,OAAe,CAAzC","sourcesContent":["import dayjs from \"dayjs\";\n\n// 今月の最初の日を追加\nconst firstDay = dayjs().startOf(\"month\");\n\n// 最初の日の曜日を取得\nconst firstDayIndex = firstDay.day();\n\nexport const createCalendar = () => \n\n// fill(0)で初期化する\n// 1~35の連番の配列を得るため、map関数でインデックス番号を取得する\n// 月の最初の日の値が0になるように配列の要素をシフトさせる\n  Array(35)\n    .fill(0)\n    .map((_, i) => {\n\n      // 月の最初の日からの差分を取得\n      // index値を日付として表示\n      const diffFromFirstDay = i - firstDayIndex;\n      const day = firstDay.add(diffFromFirstDay, \"day\");\n\n      return day;\n    });\n\nexport const isSameday = (d1, d2) => {\n  const format = \"YYYYMMDD\";\n  return d1.format(format) === d2.format(format);\n};\n\nexport const isSameMonth = (m1, m2) => {\n  const format = \"YYYYMM\";\n  return m1.forat(format) === m2.format(format);\n};\n\nexport const isFirstDay = day => day.date() === 1;"]},"metadata":{},"sourceType":"module"}