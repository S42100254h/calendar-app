{"ast":null,"code":"var _jsxFileName = \"/Users/s42100254h/git/calendar-app/src/components/CalendarElement/index.jsx\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { isSameDay, isSameMonth, isFirstDay, getMonth } from \"../../services/calendar\";\nimport Schedule from \"../Schedule/index\";\n\nconst CalendarElement = ({\n  day,\n  month,\n  schedules\n}) => {\n  const today = dayjs(); // 月の最初にだけ月情報をつける\n\n  const format = isFirstDay(day) ? \"M月D日\" : \"D\"; // 当日かどうか判断する\n\n  const isToday = isSameDay(day, today); // 今月以外をグレーダウン\n\n  const currentMonth = getMonth(month);\n  const isCurrentMonth = isSameMonth(day, currentMonth);\n  const textColor = isCurrentMonth ? \"textPrimary\" : \"textSecondary\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"date\",\n    color: textColor,\n    align: \"center\",\n    variant: \"caption\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: isToday ? \"today\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, day.format(format))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"schedules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, schedules.map(e => /*#__PURE__*/React.createElement(Schedule, {\n    key: e.id,\n    schedule: e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CalendarElement;","map":{"version":3,"sources":["/Users/s42100254h/git/calendar-app/src/components/CalendarElement/index.jsx"],"names":["React","Typography","dayjs","isSameDay","isSameMonth","isFirstDay","getMonth","Schedule","CalendarElement","day","month","schedules","today","format","isToday","currentMonth","isCurrentMonth","textColor","map","e","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,QAA7C,QAA6D,yBAA7D;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AACrD,QAAMC,KAAK,GAAGV,KAAK,EAAnB,CADqD,CAGrD;;AACA,QAAMW,MAAM,GAAGR,UAAU,CAACI,GAAD,CAAV,GAAkB,MAAlB,GAA2B,GAA1C,CAJqD,CAMrD;;AACA,QAAMK,OAAO,GAAGX,SAAS,CAACM,GAAD,EAAMG,KAAN,CAAzB,CAPqD,CASrD;;AACA,QAAMG,YAAY,GAAGT,QAAQ,CAACI,KAAD,CAA7B;AACA,QAAMM,cAAc,GAAGZ,WAAW,CAACK,GAAD,EAAMM,YAAN,CAAlC;AACA,QAAME,SAAS,GAAGD,cAAc,GAAG,aAAH,GAAmB,eAAnD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEC,SAFT;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,SAAS,EAAC,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAEH,OAAO,GAAG,OAAH,GAAa,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,GAAG,CAACI,MAAJ,CAAWA,MAAX,CADH,CAPF,CADF,eAYE;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACO,GAAV,CAAcC,CAAC,iBACd,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAjB;AAAqB,IAAA,QAAQ,EAAED,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAZF,CADF;AAoBD,CAlCD;;AAoCA,eAAeX,eAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport { isSameDay, isSameMonth, isFirstDay, getMonth } from \"../../services/calendar\";\nimport Schedule from \"../Schedule/index\";\n\nconst CalendarElement = ({ day, month, schedules }) => {\n  const today = dayjs();\n\n  // 月の最初にだけ月情報をつける\n  const format = isFirstDay(day) ? \"M月D日\" : \"D\";\n\n  // 当日かどうか判断する\n  const isToday = isSameDay(day, today);\n\n  // 今月以外をグレーダウン\n  const currentMonth = getMonth(month);\n  const isCurrentMonth = isSameMonth(day, currentMonth);\n  const textColor = isCurrentMonth ? \"textPrimary\" : \"textSecondary\";\n\n  return (\n    <div className=\"element\">\n      <Typography\n        className=\"date\"\n        color={textColor}\n        align=\"center\"\n        variant=\"caption\"\n        component=\"div\"\n      >\n        <span className={isToday ? \"today\" : \"\"}>\n          {day.format(format)}\n        </span>\n      </Typography>\n      <div className={\"schedules\"}>\n        {schedules.map(e => (\n          <Schedule key={e.id} schedule={e} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarElement;"]},"metadata":{},"sourceType":"module"}