{"ast":null,"code":"import dayjs from \"dayjs\";\nexport const createCalendar = month => {\n  // 引数月の最初の日を追加\n  const firstDay = getMonth(month); // 最初の日の曜日を取得\n\n  const firstDayIndex = firstDay.day(); // fill(0)で初期化する\n  // 1~35の連番の配列を得るため、map関数でインデックス番号を取得する\n  // 月の最初の日の値が0になるように配列の要素をシフトさせる\n\n  return Array(35).fill(0).map((_, i) => {\n    // 月の最初の日からの差分を取得\n    // index値を日付として表示\n    const diffFromFirstDay = i - firstDayIndex;\n    const day = firstDay.add(diffFromFirstDay, \"day\");\n    return day;\n  });\n};\nexport const getNextMonth = month => {\n  const day = getMonth(month).add(1, \"month\");\n  return formatMonth(day);\n};\nexport const getPreviousMonth = month => {\n  const day = getMonth(month).add(-1, \"month\");\n  return formatMonth(day);\n};\nexport const formatMonth = day => ({\n  month: day.month() + 1,\n  year: day.year()\n});\nexport const getMonth = ({\n  year,\n  month\n}) => {\n  return dayjs(`${year}-${month}`);\n};\nexport const isSameDay = (d1, d2) => {\n  const format = \"YYYYMMDD\";\n  return d1.format(format) === d2.format(format);\n};\nexport const isSameMonth = (m1, m2) => {\n  const format = \"YYYYMM\";\n  return m1.format(format) === m2.format(format);\n};\nexport const isFirstDay = day => day.date() === 1;","map":{"version":3,"sources":["/Users/s42100254h/git/calendar-app/src/services/calendar.js"],"names":["dayjs","createCalendar","month","firstDay","getMonth","firstDayIndex","day","Array","fill","map","_","i","diffFromFirstDay","add","getNextMonth","formatMonth","getPreviousMonth","year","isSameDay","d1","d2","format","isSameMonth","m1","m2","isFirstDay","date"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AACrC;AACA,QAAMC,QAAQ,GAAGC,QAAQ,CAACF,KAAD,CAAzB,CAFqC,CAGrC;;AACA,QAAMG,aAAa,GAAGF,QAAQ,CAACG,GAAT,EAAtB,CAJqC,CAMvC;AACA;AACA;;AACE,SAAOC,KAAK,CAAC,EAAD,CAAL,CACJC,IADI,CACC,CADD,EAEJC,GAFI,CAEA,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAEb;AACA;AACA,UAAMC,gBAAgB,GAAGD,CAAC,GAAGN,aAA7B;AACA,UAAMC,GAAG,GAAGH,QAAQ,CAACU,GAAT,CAAaD,gBAAb,EAA+B,KAA/B,CAAZ;AAEA,WAAON,GAAP;AACD,GAVI,CAAP;AAWD,CApBM;AAsBP,OAAO,MAAMQ,YAAY,GAAGZ,KAAK,IAAI;AACnC,QAAMI,GAAG,GAAGF,QAAQ,CAACF,KAAD,CAAR,CAAgBW,GAAhB,CAAoB,CAApB,EAAuB,OAAvB,CAAZ;AACA,SAAOE,WAAW,CAACT,GAAD,CAAlB;AACD,CAHM;AAKP,OAAO,MAAMU,gBAAgB,GAAGd,KAAK,IAAI;AACvC,QAAMI,GAAG,GAAGF,QAAQ,CAACF,KAAD,CAAR,CAAgBW,GAAhB,CAAoB,CAAC,CAArB,EAAwB,OAAxB,CAAZ;AACA,SAAOE,WAAW,CAACT,GAAD,CAAlB;AACD,CAHM;AAKP,OAAO,MAAMS,WAAW,GAAGT,GAAG,KAAK;AACjCJ,EAAAA,KAAK,EAAEI,GAAG,CAACJ,KAAJ,KAAc,CADY;AAEjCe,EAAAA,IAAI,EAAEX,GAAG,CAACW,IAAJ;AAF2B,CAAL,CAAvB;AAKP,OAAO,MAAMb,QAAQ,GAAG,CAAC;AAAEa,EAAAA,IAAF;AAAQf,EAAAA;AAAR,CAAD,KAAqB;AAC3C,SAAOF,KAAK,CAAE,GAAEiB,IAAK,IAAGf,KAAM,EAAlB,CAAZ;AACD,CAFM;AAIP,OAAO,MAAMgB,SAAS,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACnC,QAAMC,MAAM,GAAG,UAAf;AACA,SAAOF,EAAE,CAACE,MAAH,CAAUA,MAAV,MAAsBD,EAAE,CAACC,MAAH,CAAUA,MAAV,CAA7B;AACD,CAHM;AAKP,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AACrC,QAAMH,MAAM,GAAG,QAAf;AACA,SAAOE,EAAE,CAACF,MAAH,CAAUA,MAAV,MAAsBG,EAAE,CAACH,MAAH,CAAUA,MAAV,CAA7B;AACD,CAHM;AAKP,OAAO,MAAMI,UAAU,GAAGnB,GAAG,IAAIA,GAAG,CAACoB,IAAJ,OAAe,CAAzC","sourcesContent":["import dayjs from \"dayjs\";\n\nexport const createCalendar = month => {\n  // 引数月の最初の日を追加\n  const firstDay = getMonth(month);\n  // 最初の日の曜日を取得\n  const firstDayIndex = firstDay.day();\n\n// fill(0)で初期化する\n// 1~35の連番の配列を得るため、map関数でインデックス番号を取得する\n// 月の最初の日の値が0になるように配列の要素をシフトさせる\n  return Array(35)\n    .fill(0)\n    .map((_, i) => {\n\n      // 月の最初の日からの差分を取得\n      // index値を日付として表示\n      const diffFromFirstDay = i - firstDayIndex;\n      const day = firstDay.add(diffFromFirstDay, \"day\");\n\n      return day;\n    });\n};\n\nexport const getNextMonth = month => {\n  const day = getMonth(month).add(1, \"month\");\n  return formatMonth(day);\n};\n\nexport const getPreviousMonth = month => {\n  const day = getMonth(month).add(-1, \"month\");\n  return formatMonth(day);\n};\n\nexport const formatMonth = day => ({\n  month: day.month() + 1,\n  year: day.year()\n});\n\nexport const getMonth = ({ year, month }) => {\n  return dayjs(`${year}-${month}`);\n};\n\nexport const isSameDay = (d1, d2) => {\n  const format = \"YYYYMMDD\";\n  return d1.format(format) === d2.format(format);\n};\n\nexport const isSameMonth = (m1, m2) => {\n  const format = \"YYYYMM\";\n  return m1.format(format) === m2.format(format);\n};\n\nexport const isFirstDay = day => day.date() === 1;"]},"metadata":{},"sourceType":"module"}